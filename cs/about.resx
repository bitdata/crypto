<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pictureBox.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAABBNJREFUaEPtmU2y
        mzAQhFl46bUvwp04x1t5nS1HyCJ38AE4ybuEopZoaA8jMEH+SdVLlUrmgeX+ZnpGstM0P//+0wicTqew
        Z3wM5h7R3rNvBTkqXt//dBBPbNs2QcdRoKdA7BF1FKg6wB7x9tl/yUxVgCPi9b0A0eu+a8L1eg068341
        gFridR2K/vP7Vxj6NmAOQ5dg8Fw18VjoGQCIuBXP66oAR8UjooiwzliT14y8ZqCLNquWgSMAFHm73ZI9
        MAMGa9oMEBI18hEAnnhCaAboeQ3U2wHWxNsMQCzEs5B5/20W2hLPNqo1oOJRC28tYm2J9L5XR6wB2EoL
        +eUZsF3GdhVGFM9RbKkLaSaQqSo2WutC7NvaZViomL+/vyfR+vdSF9J9oZqN1gAQMbZGC0HxnPW+zYAt
        4Grit3Zhzy5eBiwE3geLaCHzLFQS38dgdXH3xnPuHO8XLVfKghashSnZSgtbIw8YtlQrBKIBEEJfHAgI
        ntsFwSOyd6bR7kLRLGjWgNdKbQYeEU+wVYhSFhTCtkS1kz1GeOLxvAKUxXdhGNrw9TVugvF1CBhdsmYx
        Ex4EAdbsZLuLnv+9gx5ssBTfJYEcAICee4hmPwQAPPFeDXCTWuts9DDWDQEDvh9rIGYoAcRZAdhs8Dc8
        i/mhTGhkGUnP+4ThwY0ZOJ/PxaK7B2hTEaPIs8glACFwr++bgLXRrdyiRgQ18tYGa9c8uAHicrlsAkzd
        JwoforAENmYCNtNs4poA+PsmgJcBu6i1i7bONQC8j9aBcLWSzUQYxszEeROAgvQYYfs5M0AYblL21Mn7
        XpoJAIjkZ+4DTiZSrSTxGwAaTR4j9JsWWyXh1PNWPK9LEDNALuJs2VImsvAMkWtgYSGKb+NzeM2d135d
        JAT7fFqoiRHEMMeHNYgM0KeeTvuUM8Ho5wJfAKj4qOPuO63drNiFrI0UYoiLpIGo4jtwfO211iFFdAlh
        M8HOlLuTAVDxbQQEQNMM0wfaTOivC4RgFiB0AhmzUhKf+3keFgL1oDXBXVjFTxZKW3u0IawzAyxBaCtv
        Z/WiSxi9R6tQOEQm76e2mWthnmmbPLvi9ThdhvBhVBgyho1lbQdm0S7Es3Bj90nHi9JxWvaEu/6PqPOD
        CdGM2VhmhDDZZsuRzy+lURKP6LbRclujuHkpRN6Fo8DRVgrzCJAVD0tQOObJNhJ5CM+fO///AzYz/gjG
        ubjzzgesORtTcRsYCwSoe7C5AbBVsmCteEae4qt8yV+DmbITLYYMcaABAIyDfkfESuJjf02WeYp4GwlG
        eatI7ztOWfxTI18jjQDJfXzb8zU+r/oatAWKVs84Hx95RiIBoC2mTWrcnF7p+RopUYjUHl9VsDXEaya0
        sKv9HlpT5M9aByPwFzkfh/Rco8D5AAAAAElFTkSuQmCC
</value>
  </data>
</root>